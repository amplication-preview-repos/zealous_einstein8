/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserPortfolio as PrismaUserPortfolio } from "@prisma/client";

export class UserPortfolioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserPortfolioCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userPortfolio.count(args);
  }

  async userPortfolios<T extends Prisma.UserPortfolioFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPortfolioFindManyArgs>
  ): Promise<PrismaUserPortfolio[]> {
    return this.prisma.userPortfolio.findMany<Prisma.UserPortfolioFindManyArgs>(
      args
    );
  }
  async userPortfolio<T extends Prisma.UserPortfolioFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPortfolioFindUniqueArgs>
  ): Promise<PrismaUserPortfolio | null> {
    return this.prisma.userPortfolio.findUnique(args);
  }
  async createUserPortfolio<T extends Prisma.UserPortfolioCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPortfolioCreateArgs>
  ): Promise<PrismaUserPortfolio> {
    return this.prisma.userPortfolio.create<T>(args);
  }
  async updateUserPortfolio<T extends Prisma.UserPortfolioUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPortfolioUpdateArgs>
  ): Promise<PrismaUserPortfolio> {
    return this.prisma.userPortfolio.update<T>(args);
  }
  async deleteUserPortfolio<T extends Prisma.UserPortfolioDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPortfolioDeleteArgs>
  ): Promise<PrismaUserPortfolio> {
    return this.prisma.userPortfolio.delete(args);
  }
}
